#proxy_cache_path /var/cache/nginx_booru levels=1:2 keys_zone=main_cache:10m max_size=100m inactive=60m use_temp_path=off;

map $http_user_agent $embed_prefix {
    ~*(discordbot|twitterbot|facebookexternalhit|cardyb)/ /api/embed;
}

server {
    server_name jej.lol lole.meme glegle.gallery bury.pink flube.supply spikedog.school yosho.io politics.lol boymoders.com;
    listen 80;
    client_max_body_size 250M;
    client_body_timeout 30s;

    location / {
        # Set default upstream
        set $proxy_target http://127.0.0.1:8080;

        # Check for crawlers and update target if needed
        if ($http_user_agent ~* (googlebot|bingbot)) {
            set $proxy_target http://127.0.0.1:3000;
            # Construct the URL for the renderer: /render/<client_url><original_uri>
            set $proxy_path_target /render/http://127.0.0.1:8080$request_uri;
        }

        # Pass to the selected target
        proxy_pass $proxy_target$proxy_path_target;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~ ^/[0-9]+ {
        # Set default upstream and path
        set $proxy_target http://127.0.0.1:8080;
        set $proxy_path_target $embed_prefix$request_uri;

        # Check for crawlers and update target/path if needed
        if ($http_user_agent ~* (googlebot|bingbot)) {
            set $proxy_target http://127.0.0.1:3000;
            # Construct the URL for the renderer: /render/<client_url><original_uri>
            set $proxy_path_target /render/http://127.0.0.1:8080$request_uri;
        }

        # Pass to the selected target
        proxy_pass $proxy_target$proxy_path_target;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    #location ~ /api/(tag-siblings/lens|tags/all)(.*) {
    #    proxy_pass http://127.0.0.1:8080/api/$1$2;
    #    include /opt/booru/server/nginx/etc/include/proxy;
    #
    #    proxy_cache main_cache;
    #    proxy_cache_valid 200 10m;
    #    add_header 'Cache-Control' 'public, max-age=600';
    #}

    location ~ /discord/? {
        return 302 "https://discord.gg/kMm8XtHmpE";
    }

    #location ~ ^/posts/.*?([0-9]+\.[a-z0-9]+$) {
    #    add_header 'Cache-Control' 'public, max-age=2592000, immutable';
    #    #alias /mnt/volume_nyc3_04/szurubooru/data/posts/;
    #    try_files /mnt/volume_nyc3_04/szurubooru/data/posts/$1 =404;
    #    #error_page 403 @unauthorized;
    #    #error_page 404 @notfound;
    #}

    #location ~ ^/thumbnails/.*?([0-9]+\.[a-z0-9]+$) {
    #    #add_header 'Cache-Control' 'public, max-age=2592000, immutable';
    #    #alias /mnt/volume_nyc3_04/szurubooru/data/generated-thumbnails/;
    #    #try_files /mnt/volume_nyc3_04/szurubooru/data/generated-thumbnails/$1 =404;
    #    return 200 "test2";
    #    #error_page 403 @unauthorized;
    #    #error_page 404 @notfound;
    #}

    location @err {
        return 500 "internal server error";
        default_type text/plain;
    }
    location @throttle {
        return 503 "please try again later";
        default_type text/plain;
    }

    include /etc/nginx/include/cloudflare;
    #include /etc/nginx/include/robots;
}
